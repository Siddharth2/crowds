build-last-errors="[]"
build-last-errors-base-dir="D:/Stanford/crowds/crowds/src/demo_analysis/crowds/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"Updating crowds documentation\\r\\nLoading crowds\\r\\n\",\"type\":2},{\"output\":\"Writing Mode.Rd\\r\\nWriting remove_outliers.Rd\\r\\nWriting geometric_mean.Rd\\r\\nWriting truncated_mean.Rd\\r\\nWriting truncated_geometric_mean.Rd\\r\\nWriting trim.Rd\\r\\nWriting rank.Rd\\r\\nWriting accuracy_by_group.Rd\\r\\nWriting agg_plot_users.Rd\\r\\nWriting max_sample_size.Rd\\r\\nWriting sample_size.Rd\\r\\nWriting sample_size_cont.Rd\\r\\nWriting NAMESPACE\\r\\n\",\"type\":1},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> Rcmd.exe INSTALL --no-multiarch --with-keep.source crowds\\n\\n\",\"type\":0},{\"output\":\"* installing to library 'D:/R/R-3.1.2/library'\\r\\n\",\"type\":1},{\"output\":\"* installing *source* package 'crowds' ...\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** R\\r\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\r\\n\",\"type\":1},{\"output\":\"Warning: D:/Stanford/crowds/crowds/src/demo_analysis/crowds/man/crowds-package.Rd:32: All text must be in a section\\r\\n\",\"type\":2},{\"output\":\"Warning: D:/Stanford/crowds/crowds/src/demo_analysis/crowds/man/crowds-package.Rd:33: All text must be in a section\\r\\n\",\"type\":2},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (crowds)\\r\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":true,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
